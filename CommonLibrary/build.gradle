apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: rootProject.ext.maven.repositoryUrl) {
                authentication(
                        userName: rootProject.ext.maven.username,
                        password: rootProject.ext.maven.password
                )
            }
            snapshotRepository(url: rootProject.ext.maven.repositorySnapshotUrl) {
                authentication(
                        userName: rootProject.ext.maven.username,
                        password: rootProject.ext.maven.password
                )
            }
            pom.version = '3.2.3'
            pom.artifactId = 'AndroidCommonLibrary'
            pom.groupId = rootProject.ext.maven.groupId
        }
    }
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation 'androidx.core:core-ktx:1.3.2'
    api 'com.google.android.material:material:1.2.1'
    api 'com.google.android:flexbox:1.1.0'
    api 'androidx.gridlayout:gridlayout:1.0.0'
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'androidx.cardview:cardview:1.0.0'
    api "androidx.viewpager2:viewpager2:1.0.0"
    api 'androidx.appcompat:appcompat:1.2.0'
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0"
    api "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    api "androidx.lifecycle:lifecycle-service:2.2.0"
    api "androidx.lifecycle:lifecycle-process:2.2.0"
    api "androidx.fragment:fragment-ktx:1.2.5"
    api "androidx.activity:activity-ktx:1.1.0"


    // 工具类
    api 'com.blankj:utilcode:1.29.0'
    // rxandroid
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'
    // MMKV——基于 mmap 的高性能通用 key-value 组件
    api 'com.tencent:mmkv-static:1.2.2'
    // mars  Mars is a cross-platform network component developed by WeChat.
    api 'com.tencent.mars:mars-xlog:1.2.3'
    // AndroidAutoSize  A low-cost Android screen adaptation solution (今日头条屏幕适配方案终极版，一个极低成本的 Android 屏幕适配方案).
    api 'me.jessyan:autosize:1.2.1'
    // fresco
    api 'com.facebook.fresco:fresco:2.5.0'
    api 'com.facebook.fresco:animated-gif:2.5.0'
    api 'com.facebook.fresco:drawee-span:2.5.0'
    // vlayout
    api 'com.alibaba.android:vlayout:1.2.40@aar'
    // SwitchButton  A cute widget of Switch Button for you to create beautiful and friendly UI.
    api 'com.kyleduo.switchbutton:library:2.0.0@aar'
    // SwipeDelMenuLayout  史上最简单侧滑菜单，0耦合，支持任意ViewGroup。一步集成侧滑(删除)菜单，高仿QQ、IOS。
    api 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.3.0'
    // RecyclerItemDecoration  ItemDecoration for RecyclerView using LinearLayoutManager for Android
    api 'com.github.magiepooh:recycler-itemdecoration:1.1.1@aar'
    // An Android Animation library which easily add itemanimator to RecyclerView items.
    api 'jp.wasabeef:recyclerview-animators:4.0.2'
    // BadgeView  支持自由定制外观、拖拽消除的MaterialDesign风格Android BadgeView
    api 'q.rorbin:badgeview:1.1.3'
    // Android-ConvenientBanner  Simple and convenient banner, loop viewpager with 3D effects
    api 'com.bigkoo:convenientbanner:2.1.5'
    // ViewPagerTransforms  Library containing common animations needed for transforming ViewPager scrolling for Android v13+.
    api 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:2.0.24'
    // CircleIndicator  A lightweight viewpager indicator like in nexus 5 launcher
    api 'me.relex:circleindicator:2.1.4@aar'
    // DiscreteScrollView  Scrollable list of items, where current item is centered and can be changed using swipes
    api 'com.yarolegovich:discrete-scrollview:1.5.1@aar'
    // MarqueeViewLibrary  一个帮您快速实现跑马灯效果的library
    api 'com.gongwen:marqueelibrary:1.1.3'
    // AlignTextView  字体对齐的TextView
    api 'me.codeboy.android:align-text-view:2.3.2'
    // android-autofittextview  A TextView that automatically resizes text to fit perfectly within its bounds.
    api 'me.grantland:autofittextview:0.2.1'
    // SmartRefreshLayout  下拉刷新、上拉加载、二级刷新、淘宝二楼、RefreshLayout、OverScroll，Android智能下拉刷新框架，支持越界回弹、越界拖动，具有极强的扩展性，集成了几十种炫酷的Header和 Footer。
    api 'com.scwang.smart:refresh-layout-kernel:2.0.1'
    api 'com.scwang.smart:refresh-header-material:2.0.1'
    api 'com.scwang.smart:refresh-footer-ball:2.0.1'
    // Broccoli  预加载时显示view占位符的效果
    api 'me.samlss:broccoli:1.0.0'
    // ConsecutiveScroller  支持多个滑动布局(RecyclerView、WebView、ScrollView等)和普通控件(TextView、ImageView、LinearLayout、自定义View等)持续连贯滑动的容器,它使所有的子View像一个整体一样连续顺畅滑动。并且支持布局吸顶功能。
    api 'com.github.donkingliang:ConsecutiveScroller:4.5.0'
}